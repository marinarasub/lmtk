name: build-linux

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    
    - uses: actions/checkout@v2
    
    - name: run-vcpkg
      # You may pin to the exact commit or the version.
      # uses: lukka/run-vcpkg@20eed0fd06d660f05dc4028a1f9591c97d85fac4
      uses: lukka/run-vcpkg@v10.0
      with:
        # 
        vcpkgDirectory: ${{ github.workspace }}/vcpkg # optional, default is ${{ github.workspace }}/vcpkg
        # Run the installation of package by running `vcpkg install` on the directory of the discovered 'vcpkg.json' file. Default is false.
        runVcpkgInstall: true  # optional
        # Specify a value to append to the cache key.
        vcpkgGitCommitId: 5568f110b509a9fd90711978a7cb76bae75bb092 #'${{ matrix.vcpkgCommitId }}'
       

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    #- name: Test
    #  working-directory: ${{github.workspace}}/build
    #  # Execute tests defined by the CMake configuration.  
    #  # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
    #  run: ctest -C ${{env.BUILD_TYPE}}
      
